#!/bin/sh
#
# afd:       Starts the AFD
#
# chkconfig: 235 70 10
# description: AFD is an automatic file distributor and collector. It is \
#              used to distribute data files via FTP, FTPS, SFTP, SMTP \
#              and/or SCP. It collects files via FTP, FTPS, SFTP, HTTP \
#              and/or HTTPS.
### BEGIN INIT INFO
# Provides: afd
# Required-Start: $local_fs
# Required-Stop: $local_fs
# Should-Start: $local_fs $network $time $remote_fs
# Should-Stop: $local_fs $network $time $remote_fs
# Default-Start: 2 3 5
# Default-Stop: 0 1 6
# Short-Description: Starts the AFD
# Description: AFD is an automatic file distributor and collector. It is
#              used to distribute data files via FTP, FTPS, SFTP, SMTP
#              and/or SCP. It collects files via FTP, FTPS, SFTP, HTTP
#              and/or HTTPS.
### END INIT INFO


CURRENT_SCRIPT_NAME="`basename $0`"
if [ -r @SYSCONFIGDIR@/afd ]
then
   if [ "$CURRENT_SCRIPT_NAME" = "afdha" ]
   then
      AFD_USERS="`grep \^AFD_HA_USER_ @SYSCONFIGDIR@/afd | cut -d '=' -f2`"
   else
      AFD_USERS="`grep \^AFD_USER_ @SYSCONFIGDIR@/afd | cut -d '=' -f2`"
   fi
else
   AFD_USERS=""
fi


# See how we were called.
case "$1" in
  start)
	RETVAL=1
	for afduser in $AFD_USERS
	do
	   AFD_WORK_DIR_LIST=`su - $afduser -c 'echo MULTIAFDDIRS:$MULTI_AFD_DIRS' | grep "^MULTIAFDDIRS:" | cut -d: -f2`
	   if [ "$AFD_WORK_DIR_LIST" = "" ]
	   then
	      echo -n "Starting AFD for $afduser : "
	      su - $afduser -c "afd -a"
	      case $? in
	         0)
	            RETVAL=0
	            touch /var/lock/subsys/afd.$afduser
	            echo "Done"
	            ;;
	         6) # AFD is disbled by system admin
	            RETVAL=0
	            touch /var/lock/subsys/afd.$afduser
	            echo "Done"
	            ;;
	         *)
	            echo "Failed"
	            ;;
	      esac
	   else
	      counter=0
	      for afddir in $AFD_WORK_DIR_LIST
	      do
	         echo -n "Starting AFD for $afduser in $afddir : "
	         su - $afduser -c "afd -w $afddir -a"
	         case $? in
	            0)
	               RETVAL=0
	               touch /var/lock/subsys/afd.$afduser-$counter
	               echo "Done"
	               ;;
	            6) # AFD is disbled by system admin
	               RETVAL=0
	               touch /var/lock/subsys/afd.$afduser-$counter
	               echo "Done"
	               ;;
	            *)
	               echo "Failed"
	               ;;
	         esac
	         counter=`expr "$counter" + 1`
	      done
	   fi
	done
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/afd
	;;
  stop)
	RETVAL=1
	for afduser in $AFD_USERS
	do
	   AFD_WORK_DIR_LIST=`su - $afduser -c 'echo MULTIAFDDIRS:$MULTI_AFD_DIRS' | grep "^MULTIAFDDIRS:" | cut -d: -f2`
	   if [ "$AFD_WORK_DIR_LIST" = "" ]
	   then
	      echo -n "Stopping AFD for $afduser : "
	      su - $afduser -c "afd -S"
	      case $? in
	         0)
	            RETVAL=0
	            rm -f /var/lock/subsys/afd.$afduser
	            echo "Done"
	            ;;
	         10)
	            RETVAL=0
	            rm -f /var/lock/subsys/afd.$afduser
	            echo "Is already stopped"
	            ;;
	         11)
	            RETVAL=0
	            rm -f /var/lock/subsys/afd.$afduser
	            echo "Is already stopped"
	            ;;
	         *)
	            echo "Failed"
	            ;;
	      esac
	   else
	      counter=0
	      for afddir in $AFD_WORK_DIR_LIST
	      do
	         echo -n "Stopping AFD for $afduser in $afddir : "
	         su - $afduser -c "afd -w $afddir -S"
	         case $? in
	            0)
	               RETVAL=0
	               rm -f /var/lock/subsys/afd.$afduser-$counter
	               echo "Done"
	               ;;
	            10)
	               RETVAL=0
	               rm -f /var/lock/subsys/afd.$afduser-$counter
	               echo "Is already stopped"
	               ;;
	            11)
	               RETVAL=0
	               rm -f /var/lock/subsys/afd.$afduser-$counter
	               echo "Is already stopped"
	               ;;
	            *)
	               echo "Failed"
	               ;;
	         esac
	         counter=`expr "$counter" + 1`
	      done
	   fi
	done
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/afd
	;;
  restart)
	$0 stop
	sleep 2
	$0 start
	RETVAL=$?
	;;
  condrestart)
	RETVAL=1
	for afduser in $AFD_USERS
	do
	   AFD_WORK_DIR_LIST=`su - $afduser -c 'echo MULTIAFDDIRS:$MULTI_AFD_DIRS' | grep "^MULTIAFDDIRS:" | cut -d: -f2`
	   if [ "$AFD_WORK_DIR_LIST" = "" ]
	   then
	      if [ -f /var/lock/subsys/restart_afd.$afduser ]
	      then
	         echo -n "Starting AFD for $afduser : "
	         su - $afduser -c "afd -a"
	         case $? in
	            0)
	               RETVAL=0
	               touch /var/lock/subsys/afd.$afduser
	               echo "Done"
	               ;;
	            6) # AFD is disbled by system admin
	               RETVAL=0
	               touch /var/lock/subsys/afd.$afduser
	               echo "Done"
	               ;;
	            *)
	               echo "Failed"
	               ;;
	         esac
	         rm -f /var/lock/subsys/restart_afd.$afduser
	      else
	         su - $afduser -c "afd -S"
	         if [ $? -eq 0 ]
	         then
	            sleep 2
	            su - $afduser -c "afd -a"
	            case $? in
	               0)
	                  RETVAL=0
	                  touch /var/lock/subsys/afd.$afduser
	                  echo "Done"
	                  ;;
	               6) # AFD is disbled by system admin
	                  RETVAL=0
	                  touch /var/lock/subsys/afd.$afduser
	                  echo "Done"
	                  ;;
	               *)
	                  echo "Failed"
	                  ;;
	            esac
	         fi
	      fi
	   else
	      counter=0
	      for afddir in $AFD_WORK_DIR_LIST
	      do
	         if [ -f /var/lock/subsys/restart_afd.$afduser-$counter ]
	         then
	            echo -n "Starting AFD for $afduser : "
	            su - $afduser -c "afd -w $afddir -a"
	            case $? in
	               0)
	                  RETVAL=0
	                  touch /var/lock/subsys/afd.$afduser-$counter
	                  echo "Done"
	                  ;;
	               6) # AFD is disbled by system admin
	                  RETVAL=0
	                  touch /var/lock/subsys/afd.$afduser-$counter
	                  echo "Done"
	                  ;;
	               *)
	                  echo "Failed"
	                  ;;
	            esac
	            rm -f /var/lock/subsys/restart_afd.$afduser-$counter
	         else
	            su - $afduser -c "afd -w $afddir -S"
	            if [ $? -eq 0 ]
	            then
	               sleep 2
	               su - $afduser -c "afd -w $afddir -a"
	               case $? in
	                  0)
	                     RETVAL=0
	                     touch /var/lock/subsys/afd.$afduser-$counter
	                     echo "Done"
	                     ;;
	                  6) # AFD is disbled by system admin
	                     RETVAL=0
	                     touch /var/lock/subsys/afd.$afduser-$counter
	                     echo "Done"
	                     ;;
	                  *)
	                     echo "Failed"
	                     ;;
	               esac
	            fi
	         fi
	         counter=`expr "$counter" + 1`
	      done
	   fi
	done

	if [ ! "$CURRENT_SCRIPT_NAME" = "afdha" ]
	then
	   # HA users may only be started if we find a restart_afd.user file!
	   if [ -r @SYSCONFIGDIR@/afd ]
	   then
	      AFD_HA_USERS="`grep \^AFD_HA_USER_ @SYSCONFIGDIR@/afd | cut -d '=' -f2`"
	   fi
	   for afduser in $AFD_HA_USERS
	   do
	      AFD_WORK_DIR_LIST=`su - $afduser -c 'echo MULTIAFDDIRS:$MULTI_AFD_DIRS' | grep "^MULTIAFDDIRS:" | cut -d: -f2`
	      if [ "$AFD_WORK_DIR_LIST" = "" ]
	      then
	         if [ -f /var/lock/subsys/restart_afd.$afduser ]
	         then
	            echo -n "Starting AFD for $afduser : "
	            su - $afduser -c "afd -a"
	            if [ $? -eq 0 ]
	            then
	               RETVAL=0
	               touch /var/lock/subsys/afd.$afduser
	               echo "Done"
	            else
	               echo "Failed"
	            fi
	            rm -f /var/lock/subsys/restart_afd.$afduser
	         fi
	      else
	         counter=0
	         for afddir in $AFD_WORK_DIR_LIST
	         do
	            if [ -f /var/lock/subsys/restart_afd.$afduser-$counter ]
	            then
	               echo -n "Starting AFD for $afduser in $afddir : "
	               su - $afduser -c "afd -w $afddir -a"
	               if [ $? -eq 0 ]
	               then
	                  RETVAL=0
	                  touch /var/lock/subsys/afd.$afduser-$counter
	                  echo "Done"
	               else
	                  echo "Failed"
	               fi
	               rm -f /var/lock/subsys/restart_afd.$afduser-$counter
	            fi
	            counter=`expr "$counter" + 1`
	         done
	      fi
	   done
	fi
	rm -f /var/lock/subsys/afd.restart
	;;
  status)
	NOT_RUNNING=""
	IS_RUNNING=""
	IS_DISABLED=""
	for afduser in $AFD_USERS
	do
	   AFD_WORK_DIR_LIST=`su - $afduser -c 'echo MULTIAFDDIRS:$MULTI_AFD_DIRS' | grep "^MULTIAFDDIRS:" | cut -d: -f2`
	   if [ "$AFD_WORK_DIR_LIST" = "" ]
	   then
	      su - $afduser -c "afd -c"
	      RETVAL=$?
	      if [ $RETVAL -ne 5 ]
	      then
	         su - $afduser -c "ls $AFD_WORK_DIR/etc/NO_AUTO_RESTART > /dev/null 2>&1"
	         if [ $? = 0 ]
	         then
	            IS_DISABLED="`echo $IS_DISABLED` $afduser"
	         else
	            NOT_RUNNING="`echo $NOT_RUNNING` $afduser"
	         fi
	      else
	         IS_RUNNING="`echo $IS_RUNNING` $afduser"
	      fi
	   else
	      counter=0
	      for afddir in $AFD_WORK_DIR_LIST
	      do
	         su - $afduser -c "afd -w $afddir -c"
	         RETVAL=$?
	         if [ $RETVAL -ne 5 ]
	         then
	            if [ -f $afddir/etc/NO_AUTO_RESTART ]
	            then
	               IS_DISABLED="`echo $IS_DISABLED` $afduser[$afddir]"
	            else
	               NOT_RUNNING="`echo $NOT_RUNNING` $afduser[$afddir]"
	            fi
	         else
	            IS_RUNNING="`echo $IS_RUNNING` $afduser[$afddir]"
	         fi
	         counter=`expr "$counter" + 1`
	      done
	   fi
	done
	if [ "$NOT_RUNNING" = "" ]
	then
	   if [ "$IS_DISABLED" = "" ]
	   then
	      echo "AFD for ${IS_RUNNING} is running."
	   else
	      echo "AFD for ${IS_RUNNING} is running and for ${IS_DISABLED} it is disabled."
	   fi
	   RETVAL=0
	else
	   echo "AFD for ${NOT_RUNNING} is NOT active."
	   RETVAL=1
	fi
	;;
  *)
	echo "*** Usage: afd {start|stop|restart|condrestart|status}"
	RETVAL=1
	;;
esac

exit $RETVAL
